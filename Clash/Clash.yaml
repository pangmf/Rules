# Port of HTTP(S) proxy server on the local end
port: 7890

# Port of SOCKS5 proxy server on the local end
socks-port: 7891

# Transparent proxy server port for Linux and macOS
redir-port: 7892

# HTTP(S) and SOCKS5 server on the same port
# mixed-port: 7892

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to local-end server from
# other LAN IP addresses
allow-lan: true

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
# bind-address: '*'

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses

# RESTful web API listening address
external-controller: '0.0.0.0:9090'

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `${API}/ui`.
# external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
# experimental:
# interface-name: WLAN

# Static hosts for DNS server and connection establishment, only works
# when `dns.enhanced-mode` is `redir-host`.
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names has a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  'mobile-gtalk.l.google.com': 108.177.125.188
  'mtalk.google.com': 108.177.125.188
  'alt1-mtalk.google.com': 142.250.101.188
  'alt2-mtalk.google.com': 173.194.201.188
  'alt3-mtalk.google.com': 209.85.145.188
  'alt4-mtalk.google.com': 173.194.209.188
  'alt5-mtalk.google.com': 142.250.101.18
  'alt6-mtalk.google.com': 64.233.177.188
  'alt7-mtalk.google.com': 173.194.68.188
  'alt8-mtalk.google.com': 173.194.216.188
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# DNS server settings
# This section is optional. When not present, DNS server will be disabled.
dns:
  enable: true
  listen: 0.0.0.0:53
  # ipv6: false # when false, response to AAAA questions will be empty

  # These nameservers are used to resolve the DNS nameserver hostnames below.
  # Specify IP addresses only
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  enhanced-mode: fake-ip # or redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR
  
  # Hostnames in this list will not be resolved with fake IPs
  # i.e. questions to these domain names will always be answered with their
  # real IP addresses
  fake-ip-filter:
    - '*.lan'
    - '*.edu.cn'
    - localhost.ptlogin2.qq.com
    - '*.*.*.srv.nintendo.net'
    - '*.*.stun.playstation.net'
    - xbox.*.*.microsoft.com
    - '*.*.xboxlive.com'
    - '*.msftncsi.com'
    - 'www.msftconnecttest.com'
  
  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.
  # All DNS questions are sent directly to the nameserver, without proxies
  # involved. Clash answers the DNS question with the first result gathered.
  nameserver:
    - 114.114.114.114
    - 'tcp://223.5.5.5'
  
# proxies:
# 支持的协议及加密算法示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md

# 服务器节点订阅
proxy-providers:
  # name: # Provider 名称
  #   type: http # http 或 file
  #   path: # 文件路径
  #   url: # 只有当类型为 HTTP 时才可用，您不需要在本地空间中创建新文件。
  #   interval: # 自动更新间隔，仅在类型为 HTTP 时可用
  #   health-check: # 健康检查选项从此处开始
  #     enable:
  #     url: 
  #     interval: 

  #
  # 「url」参数填写订阅链接
  #
  # 订阅链接可以使用 API 进行转换，如：https://sub-web.netlify.app/
  #
  # 1.模式选择「进阶模式」 2.填写订阅链接 3.勾选「输出为 Node List」 4.「生成订阅链接」
  #
      
  Sakura: # 机场订阅链接
    type: http
    url: "https://suo.yt/fHF54Xd"
    interval: 864000
    path: ./Proxy/Sakura.yaml # 不同机场不同命名
    health-check:
      enable: true
      interval: 86400
      url: http://www.gstatic.com/generate_204

proxy-groups:
# 策略组示例请查阅 Clash 项目 README 以使用最新格式：https://github.com/Dreamacro/clash/blob/master/README.md

#
# 策略组说明
#
# 「MATCH」类似 Surge 的「Final」，此处用于选择白名单模式(PROXY 策略)和黑名单模式(DIRECT 策略)
#
# 「Streaming」和「StreamingSE」比较好理解，有专用于流媒体的节点就设置到其中，如果没有「StreamingSE」的需求可以连带 Rule 部分一起删掉，「Streaming」需至少保留 Rule，用「PROXY」即可。
#
# 「PROXY」是代理规则策略，它可以指定为某个节点或嵌套一个其他策略组，如：「自动测试」、「Fallback」或「负载均衡」的策略组，关于这 3 个策略组的具体示例可以看官方示例：https://github.com/Dreamacro/clash
#
  # 手动选择节点订阅
  - name: "Sakura"
    type: select # 亦可使用 fallback 或 load-balance
    use:
      - Sakura
      
  # 代理节点选择
  - name: "Proxy"
    type: select
    proxies:
      - DIRECT
      - Sakura
      
  # 白名单模式 PROXY, 黑名单模式 DIRECT, 不知道别动
  - name: "Others"
    type: select
    proxies:
      - Proxy
      - DIRECT

  # 国际流媒体服务
  - name: "GlobalTV"
    type: select
    use:
      - Sakura
      
  # 中国流媒体服务（面向海外版本）
  - name: "AsianTV"
    type: select
    proxies:
      - DIRECT
    use:
      - Sakura
      
  # ADs
  - name: "AdBlock"
    type: select
    proxies:
      - REJECT
      - DIRECT

  # Netflix
  - name: "Netflix"
    type: select
    use:
      - Sakura

  # Spotify
  - name: "Spotify"
    type: select
    use:
      - Sakura
      
  # Apple
  - name: "Apple"
    type: select
    proxies:
      - DIRECT
    use:
      - Sakura
      
  # Domestic
  # - name: "Domestic"
  #   type: select
  #   proxies:
  #     - DIRECT
  #   use:
  #     - Sakura
 

# 关于 Rule Provider 请查阅：https://lancellc.gitbook.io/clash/clash-config-file/rule-provider
rule-providers:
  Reject:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Reject.yaml'
    path: ./Rules/Reject
    interval: 864000
  Special:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Special.yaml'
    path: ./Rules/Special
    interval: 864000
  Netflix:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Netflix.yaml'
    path: ./Rules/Media/Netflix
    interval: 864000
  Spotify:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Spotify.yaml'
    path: ./Rules/Media/Spotify
    interval: 864000
  # YouTube Music:
  #   type: http
  #   behavior: classical
  #   url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/YouTube%20Music.yaml'
  #   path: ./Rules/Media/YouTube_Music
  #   interval: 864000
  YouTube:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/YouTube.yaml'
    path: ./Rules/Media/YouTube
    interval: 864000
  Bilibili:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Bilibili.yaml'
    path: ./Rules/Media/Bilibili
    interval: 864000
  iQiyi:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/iQiyi.yaml'
    path: ./Rules/Media/iQiyi
    interval: 864000
  Letv:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Letv.yaml'
    path: ./Rules/Media/Letv
    interval: 864000
  # MOO:
  #   type: http
  #   behavior: classical
  #   url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/MOO.yaml'
  #   path: ./Rules/Media/MOO
  #   interval: 864000
  Netease Music:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Netease%20Music.yaml'
    path: ./Rules/Media/Netease_Music
    interval: 864000
  Tencent Video:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Tencent%20Video.yaml'
    path: ./Rules/Media/Tencent_Video
    interval: 864000
  Youku:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Youku.yaml'
    path: ./Rules/Media/Youku
    interval: 864000
  WeTV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/WeTV.yaml'
    path: ./Rules/Media/WeTV
    interval: 864000
  ABC:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/ABC.yaml'
    path: ./Rules/Media/ABC
    interval: 864000
  Abema TV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Abema%20TV.yaml'
    path: ./Rules/Media/Abema_TV
    interval: 864000
  Amazon:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Amazon.yaml'
    path: ./Rules/Media/Amazon
    interval: 864000
  Apple News:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Apple%20News.yaml'
    path: ./Rules/Media/Apple_News
    interval: 864000
  Apple TV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Apple%20TV.yaml'
    path: ./Rules/Media/Apple_TV
    interval: 864000
  Bahamut:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Bahamut.yaml'
    path: ./Rules/Media/Bahamut
    interval: 864000
  BBC iPlayer:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/BBC%20iPlayer.yaml'
    path: ./Rules/Media/BBC_iPlayer
    interval: 864000
  DAZN:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/DAZN.yaml'
    path: ./Rules/Media/DAZN
    interval: 864000
  Discovery Plus:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Discovery%20Plus.yaml'
    path: ./Rules/Media/Discovery_Plus
    interval: 864000
  encoreTVB:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/encoreTVB.yaml'
    path: ./Rules/Media/encoreTVB
    interval: 864000
  Fox Now:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Fox%20Now.yaml'
    path: ./Rules/Media/Fox_Now
    interval: 864000
  Fox+:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Fox%2B.yaml'
    path: ./Rules/Media/Fox+
    interval: 864000
  HBO:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/HBO.yaml'
    path: ./Rules/Media/HBO
    interval: 864000
  Hulu Japan:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Hulu%20Japan.yaml'
    path: ./Rules/Media/Hulu_Japan
    interval: 864000
  Hulu:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Hulu.yaml'
    path: ./Rules/Media/Hulu
    interval: 864000
  Japonx:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Japonx.yaml'
    path: ./Rules/Media/Japonx
    interval: 864000
  JOOX:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/JOOX.yaml'
    path: ./Rules/Media/JOOX
    interval: 864000
  KKBOX:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/KKBOX.yaml'
    path: ./Rules/Media/KKBOX
    interval: 864000
  KKTV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/KKTV.yaml'
    path: ./Rules/Media/KKTV
    interval: 864000
  Line TV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Line%20TV.yaml'
    path: ./Rules/Media/Line_TV
    interval: 864000
  myTV SUPER:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/myTV%20SUPER.yaml'
    path: ./Rules/Media/myTV_SUPER
    interval: 864000
  Pandora:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Pandora.yaml'
    path: ./Rules/Media/Pandora
    interval: 864000
  PBS:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/PBS.yaml'
    path: ./Rules/Media/PBS
    interval: 864000
  Pornhub:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Pornhub.yaml'
    path: ./Rules/Media/Pornhub
    interval: 864000
  Soundcloud:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/Soundcloud.yaml'
    path: ./Rules/Media/Soundcloud
    interval: 864000
  ViuTV:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Media/ViuTV.yaml'
    path: ./Rules/Media/ViuTV
    interval: 864000
  Telegram:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider//Telegram.yaml'
    path: ./Rules/Telegram
    interval: 864000
  Steam:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Steam.yaml'
    path: ./Rules/Steam
    interval: 864000
  Speedtest:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Speedtest.yaml'
    path: ./Rules/Speedtest
    interval: 864000
  PayPal:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/PayPal.yaml'
    path: ./Rules/PayPal
    interval: 864000
  Microsoft:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Microsoft.yaml'
    path: ./Rules/Microsoft
    interval: 864000
  PROXY:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Proxy.yaml'
    path: ./Rules/Proxy
    interval: 864000
  Domestic:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Domestic.yaml'
    path: ./Rules/Domestic
    interval: 864000
  Apple:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Apple.yaml'
    path: ./Rules/Apple
    interval: 864000
  Domestic IPs:
    type: http
    behavior: ipcidr
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/Domestic%20IPs.yaml'
    path: ./Rules/Domestic_IPs
    interval: 864000
  LAN:
    type: http
    behavior: classical
    url: 'https://cdn.jsdelivr.net/gh/pangmf/Rules@master/Clash/Provider/LAN.yaml'
    path: ./Rules/LAN
    interval: 864000

# 规则
rules:
- DOMAIN-SUFFIX,18comic.vip,Spotify
- RULE-SET,Reject,AdBlock
- RULE-SET,Special,DIRECT

- RULE-SET,Netflix,Netflix
- RULE-SET,Spotify,Spotify

# - RULE-SET,YouTube Music,Spotify
- RULE-SET,YouTube,GlobalTV

- RULE-SET,Bilibili,AsianTV
- RULE-SET,iQiyi,AsianTV
- RULE-SET,Letv,AsianTV
# - RULE-SET,MOO,AsianTV
- RULE-SET,Netease Music,AsianTV
- RULE-SET,Tencent Video,AsianTV
- RULE-SET,Youku,AsianTV
- RULE-SET,WeTV,AsianTV

- RULE-SET,ABC,GlobalTV
- RULE-SET,Abema TV,GlobalTV
- RULE-SET,Amazon,GlobalTV
- RULE-SET,Apple News,Apple
- RULE-SET,Apple TV,Apple
- RULE-SET,Bahamut,GlobalTV
- RULE-SET,BBC iPlayer,GlobalTV
- RULE-SET,DAZN,GlobalTV
- RULE-SET,Discovery Plus,GlobalTV
- RULE-SET,encoreTVB,GlobalTV
- RULE-SET,Fox Now,GlobalTV
- RULE-SET,Fox+,GlobalTV
- RULE-SET,HBO,GlobalTV
- RULE-SET,Hulu Japan,GlobalTV
- RULE-SET,Hulu,GlobalTV
- RULE-SET,Japonx,GlobalTV
- RULE-SET,JOOX,GlobalTV
- RULE-SET,KKBOX,GlobalTV
- RULE-SET,KKTV,GlobalTV
- RULE-SET,Line TV,GlobalTV
- RULE-SET,myTV SUPER,GlobalTV
- RULE-SET,Pandora,GlobalTV
- RULE-SET,PBS,GlobalTV
- RULE-SET,Pornhub,GlobalTV
- RULE-SET,Soundcloud,GlobalTV
- RULE-SET,ViuTV,GlobalTV

- RULE-SET,Telegram,Proxy
- RULE-SET,Steam,Others
- RULE-SET,Speedtest,Others
- RULE-SET,PayPal,Others
- RULE-SET,Microsoft,Others

- RULE-SET,PROXY,Proxy

- RULE-SET,Apple,Apple

- RULE-SET,Domestic,DIRECT
- RULE-SET,Domestic IPs,DIRECT

- RULE-SET,LAN,DIRECT
- GEOIP,CN,DIRECT
- MATCH,Others
